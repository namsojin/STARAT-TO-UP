<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberDAO">
	<insert id="insertMember">
		INSERT INTO MEMBERS(M_ID, M_PW, M_NAME, M_EMAIL1, M_EMAIL2, M_NUM, M_REGDATE) VALUES(#{mId},#{mPw},#{mName},#{mEmail1},#{mEmail2},#{mNum},to_char(sysdate,'rr.mm.dd'))
	</insert>

	<insert id="insertKakao">
		INSERT INTO MEMBERS(M_ID, M_PW, M_NAME, M_EMAIL1, M_EMAIL2, M_NUM, M_REGDATE) VALUES(#{mId},'KAKAO',#{mName},#{mEmail1},#{mEmail2},'010-0000-0000',to_char(sysdate,'rr.mm.dd'))
	</insert>

	<delete id="deleteMember">
		DELETE FROM MEMBERS WHERE M_ID=#{mId}
	</delete>

	<select id="selectAllMember" resultType="member">
		SELECT M_ID, M_NAME, M_EMAIL1, M_EMAIL2, M_NUM, M_REGDATE FROM MEMBERS WHERE UPPER(M_ID) NOT LIKE 'ADMIN'
	</select>
	
	<select id="selectOneMember" resultType="member">
		SELECT M_ID, M_NAME, M_EMAIL1, M_EMAIL2, M_NUM, M_REGDATE FROM MEMBERS WHERE M_ID=#{mId}
	</select>
	
	<select id="selectKakaoMember" resultType="member">
		SELECT M_ID, M_PW, M_NAME, M_EMAIL1, M_EMAIL2, M_NUM, M_REGDATE FROM MEMBERS WHERE M_ID=#{mId}
	</select>
	
	<select id="selectOneEmail" resultType="member">
		SELECT M_ID, M_NAME, M_EMAIL1, M_EMAIL2, M_NUM, M_REGDATE FROM MEMBERS WHERE M_EMAIL1=#{mEmail1} AND M_EMAIL2=#{mEmail2}
	</select>
	
	<select id="login" resultType="member">
		SELECT M_ID, M_PW, M_NAME, M_EMAIL1, M_EMAIL2, M_NUM, M_REGDATE FROM MEMBERS WHERE M_ID=#{mId} AND M_PW=#{mPw}
	</select>
	
	<insert id="insertFund">
		INSERT INTO MYFUNDING(MF_NUM, MF_MID, MF_PID) VALUES((SELECT NVL(MAX(MF_NUM), 0) + 1 FROM MYFUNDING),#{mfMid},#{mfPid})
	</insert>
	
	<select id="selectAllFund" resultType="myfunding">
		SELECT a.M_ID, b.MF_NUM, b.MF_PID FROM MEMBERS a INNER JOIN MYFUNDING b ON a.M_ID = b.MF_MID
	</select>
	
	<insert id="insertLike">
		INSERT INTO MYLIKE(ML_NUM, ML_MID, ML_PID) VALUES((SELECT NVL(MAX(ML_NUM), 0) + 1 FROM MYLIKE),#{mlMid},#{mlPid})
	</insert>
	
	<delete id="deleteLike">
		DELETE FROM MYLIKE WHERE ML_NUM=#{mlNum}
	</delete>
	
	<delete id="deleteLikeList">
		DELETE FROM MYLIKE WHERE ML_MID=#{mlMid} AND ML_PID=#{mlPid}
	</delete> 
	
	<select id="selectAllLike" resultType="mylike">
		SELECT a.M_ID, b.ML_NUM, b.ML_PID FROM MEMBERS a INNER JOIN MYLIKE b ON a.M_ID = b.ML_MID
	</select>
	
	<select id="checkLike" resultType="mylike">
		SELECT ML_NUM,ML_MID,ML_PID FROM MYLIKE WHERE ML_PID=#{mlPid} AND ML_MID=#{mlMid}
	</select>
	
	<select id="countLike" resultType="mylike">
		SELECT COUNT(ML_NUM) AS ML_NUM FROM MYLIKE ML WHERE ML_MID=#{mlMid}
	</select>
	
	<select id="myLikeList" resultType="product">
		SELECT DISTINCT p.P_NUM, p.P_PRICE, p.P_NAME, p.P_AMOUNT, p.P_IMAGE1, p.P_EN FROM PRODUCT p, MYLIKE l, MEMBERS m WHERE p.P_NUM = l.ML_PID AND l.ML_MID = #{mlMid}
	</select>
	
	<select id="myFundList" resultType="product">
		SELECT DISTINCT p.P_NUM, p.P_PRICE, p.P_NAME, p.P_AMOUNT, p.P_IMAGE1, p.P_EN FROM PRODUCT p, MYFUNDING f, MEMBERS m WHERE p.P_NUM = f.MF_PID AND f.MF_MID = #{mfMid}
	</select>
	
	<select id="checkDuplication" resultType="myfunding">
		SELECT MF_NUM, MF_MID, MF_PID FROM MYFUNDING WHERE MF_MID = #{mfMid} AND MF_PID = #{mfPid}
	</select>
	
</mapper>